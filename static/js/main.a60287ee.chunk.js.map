{"version":3,"sources":["components/DataTransferTodo.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["getTodos","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","currentTodos","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","getUsers","_ref2","_callee2","currentUsers","_context2","TodoItem","item","react_default","createElement","className","id","user","name","title","type","checked","completed","TodoList","completedTodo","map","todo","components_TodoItem","key","getSortedTodos","completedTodoList","sortField","callback","b","localeCompare","toConsumableArray","sort","App","state","isLoaded","isLoading","handleClick","todos","users","prepared","objectSpread","find","userId","_this","setState","setTimeout","sortByReverse","prevState","reverse","sortBy","_this2","onClick","components_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a60287ee.chunk.js","sourcesContent":["export const getTodos = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos');\n  const currentTodos = await response.json();\n\n  return currentTodos;\n};\n\nexport const getUsers = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/users');\n  const currentUsers = await response.json();\n\n  return currentUsers;\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ item }) => (\n  <div className=\"item__container\">\n    <div className=\"item__container-id\">{item.id}</div>\n    <div className=\"item__container-name\">{item.user.name}</div>\n    <div className=\"item__container-title\">{item.title}</div>\n    <input className=\"item__container-completed\" type=\"checkbox\" checked={item.completed} />\n  </div>\n);\n\nTodoItem.propTypes = {\n  item: PropTypes.shape({\n    completed: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number,\n    user: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ completedTodo }) => (\n  <div className=\"todo__List\">\n    {completedTodo.map(todo => (\n      <div className=\"todo__List-container\">\n        <div className=\"container__Item\"><TodoItem item={todo} key={todo.id} /></div>\n      </div>\n    ))}\n  </div>\n);\n\nTodoList.propTypes = {\n  completedTodo: PropTypes.arrayOf({\n    todo: PropTypes.shape({\n      user: PropTypes.object,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport { getTodos, getUsers } from './components/DataTransferTodo';\nimport TodoList from './components/TodoList';\n\nconst getSortedTodos = (completedTodoList, sortField) => {\n  let callback = (typeof completedTodoList[0][sortField] === 'string')\n    ? (a, b) => a[sortField].localeCompare(b[sortField])\n    : (a, b) => a[sortField] - (b[sortField]);\n\n  if (sortField === 'user') {\n    callback = (a, b) => a.user.name.localeCompare(b.user.name);\n  }\n  return [...completedTodoList].sort(callback);\n};\n\nclass App extends React.Component {\n    state = {\n      completedTodoList: [],\n      isLoaded: false,\n      isLoading: false,\n      sortField: 'id',\n    };\n\n    handleClick = async() => {\n      const todos = await getTodos();\n      const users = await getUsers();\n      const prepared = todos.map(todo => ({\n        ...todo,\n        user: users.find(user => user.id === todo.userId),\n      }));\n      this.setState({\n        completedTodoList: [...prepared],\n        isLoading: true,\n      });\n\n      setTimeout(() => {\n        this.setState({\n          isLoaded: true,\n          isLoading: false,\n        });\n      }, 1000);\n    };\n\n    sortByReverse = () => {\n      this.setState(prevState => ({\n        completedTodoList: getSortedTodos(prevState.completedTodoList)\n          .reverse(),\n      }));\n    };\n\n    sortBy = (sortField) => {\n      sortField !== this.state.sortField\n        ? this.setState(prevState => ({\n          completedTodoList: getSortedTodos(prevState.completedTodoList, sortField),\n          sortField,\n        }))\n        : this.sortByReverse();\n    }\n\n    render() {\n      return (\n        <div>\n          { this.state.isLoaded ? (\n            <div className=\"Todo\">\n              <button onClick={() => this.sortBy('id')}>ID</button>\n              <button onClick={() => this.sortBy('completed')}>Completed</button>\n              <button onClick={() => this.sortBy('title')}>Title</button>\n              <button onClick={() => this.sortBy('user')}>User</button>\n              <TodoList completedTodo={this.state.completedTodoList} />\n            </div>\n          ) : (\n            <button type=\"button\" onClick={this.handleClick} className=\"button-Load\">\n              {this.state.isLoading ? 'Loading...' : 'Load'}\n            </button>\n          )}\n        </div>\n      );\n    }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}